version: '3.8'

services:
  app1:
    build:
      context: .
      dockerfile: examples/Dockerfile
    ports:
      - "8002:8000"
    environment:
      - APP_MODULE=examples.app1:app
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
      - LOG_LEVEL=warning
      - UVICORN_LOG_LEVEL=error
      - UVICORN_ACCESS_LOG=false
    depends_on:
      - otel-collector
      - app2
    networks:
      - observability

  app2:
    build:
      context: .
      dockerfile: examples/Dockerfile
    ports:
      - "8001:8000"
    environment:
      - APP_MODULE=examples.app2:app
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
      - LOG_LEVEL=warning
      - UVICORN_LOG_LEVEL=error
      - UVICORN_ACCESS_LOG=false
    depends_on:
      - otel-collector
    networks:
      - observability

  otel-collector:
    image: otel/opentelemetry-collector:latest
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./configs/otel-collector.yml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317"
      - "4318:4318"
    depends_on:
      - prometheus
      - tempo
      - loki
    networks:
      - observability

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - observability

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./examples/dashboards:/var/lib/grafana/dashboards
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        /run.sh &
        sleep 10
        /var/lib/grafana/dashboards/provision.sh
        wait
    depends_on:
      - prometheus
      - tempo
      - loki
    networks:
      - observability

  tempo:
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yaml" ]
    user: root
    volumes:
      - ./configs/tempo.yml:/etc/tempo.yaml
      - tempo_data:/tmp/tempo
    ports:
      - "3200:3200"
      - "9411:9411"
    networks:
      - observability

  loki:
    image: grafana/loki:latest
    command: -config.file=/etc/loki/local-config.yaml
    user: root
    ports:
      - "3100:3100"
      - "3111:3111"
    volumes:
      - ./configs/loki.yml:/etc/loki/local-config.yaml
      - loki_data:/loki
    networks:
      - observability

  promtail:
    image: grafana/promtail:latest
    volumes:
      - ./configs/promtail/config.yml:/etc/promtail/config.yml
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/containers:/var/lib/docker/containers
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    networks:
      - observability

networks:
  observability:
    driver: bridge

volumes:
  tempo_data:
  loki_data: 